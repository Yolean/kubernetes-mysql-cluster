apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
spec:
  selector:
    matchLabels:
      app: mariadb
  serviceName: "mariadb"
  replicas: 3
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      terminationGracePeriodSeconds: 25
      initContainers:
      - name: init-config
        command: ['/bin/bash', '/etc/mysql/conf.d-configmap/init.sh']
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DATADIR
          value: /data/db
        - name: AUTO_RECOVERY_MODE
          value: confirm-force-bootstrap
        - name: WSREP_CLUSTER_ADDRESS
          value: "gcomm://mariadb-0.mariadb,mariadb-1.mariadb,mariadb-2.mariadb"
        workingDir: /etc/mysql/conf.d-configmap
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf-readonly
          mountPath: /etc/mysql/conf.d-configmap
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        image: mariadb:10.5.11-focal@sha256:228d87496cc141569f5f692594823fb1d62a361b6f8848165eb4f953af5e3c3a
      containers:
      - name: mariadb
        image: mariadb:10.5.11-focal@sha256:228d87496cc141569f5f692594823fb1d62a361b6f8848165eb4f953af5e3c3a
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4444
          name: sst
        - containerPort: 4567
          name: replication
        - containerPort: 4567
          protocol: UDP
          name: replicationudp
        - containerPort: 4568
          name: ist
        env:
        - name: MYSQL_ROOT_HOST
          value: "localhost"
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "yes"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - test ON = "$(mysql -e "SHOW STATUS LIKE 'wsrep_ready';" -N -B | sed 's/wsrep_ready\t//')"
          initialDelaySeconds: 30
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
      - name: metrics
        image: prom/mysqld-exporter:v0.13.0@sha256:a8af600c3ef1c8df179b736b94d04dc5ec209be88407a4c1c1bd0fc6394f56e8
        env:
        - name: DATA_SOURCE_NAME
          # https://github.com/prometheus/mysqld_exporter#required-grants
          value: exporter:exporter@tcp(127.0.0.1:3306)/
        ports:
        - name: metrics
          containerPort: 9104
      volumes:
      - name: conf
        emptyDir: {}
      - name: conf-readonly
        configMap:
          name: conf-d
      - name: initdb
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mysql
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
